// Auto-generated - do not edit manually
// Run 'yarn build-bookmarklet' to update this file
export const BOOKMARKLET_CODE = `javascript:!function(){function e(e,t="info"){const o=document.createElement("div");o.style.cssText=\`\\n      position: fixed;\\n      top: 20px;\\n      right: 20px;\\n      background: \${{info:"#2196F3",success:"#4CAF50",error:"#F44336",warning:"#FF9800"}[t]};\\n      color: white;\\n      padding: 15px 20px;\\n      border-radius: 8px;\\n      font-family: Arial, sans-serif;\\n      font-size: 14px;\\n      font-weight: 500;\\n      z-index: 10000;\\n      max-width: 350px;\\n      box-shadow: 0 4px 12px rgba(0,0,0,0.3);\\n      transition: opacity 0.3s ease;\\n      line-height: 1.4;\\n    \`,o.textContent=e,document.body.appendChild(o),setTimeout(()=>{o.style.opacity="0",setTimeout(()=>{o.parentNode&&o.parentNode.removeChild(o)},300)},2e3)}!async function(){try{if(!window.location.hostname.includes("geoguessr.com"))return void e("Please run this bookmarklet on a GeoGuessr page!","warning");const t=function(e){if(!e||"string"!=typeof e||!e.trim())return null;const t=e.trim(),o=[/\\/challenge\\/([a-zA-Z0-9-_]+)/,/\\/results\\/([a-zA-Z0-9-_]+)/];for(const e of o){const o=t.match(e);if(o)return o[1]}return null}(window.location.href);if(!t)return void e("No challenge found on this page. Please navigate to a challenge page.","error");e(\`Fetching challenge \${t}...\`,"info");const o=new URLSearchParams({friends:"false",limit:"100",minRounds:"5"}),[n,r]=await Promise.all([fetch(\`https://www.geoguessr.com/api/v3/challenges/\${t}\`,{headers:{Accept:"application/json","X-Requested-With":"XMLHttpRequest"},credentials:"include"}),fetch(\`https://www.geoguessr.com/api/v3/results/highscores/\${t}?\${o}\`,{headers:{Accept:"application/json","X-Requested-With":"XMLHttpRequest"},credentials:"include"})]);if(!n.ok)throw new Error(\`Failed to fetch challenge: \${n.status}\`);if(!r.ok)throw new Error(\`Failed to fetch highscores: \${r.status}\`);const[i,s]=await Promise.all([n.json(),r.json()]);if(!s||!s.items||0===s.items.length)throw new Error("No results found for this challenge");const a={challengeId:t,challengeResponse:i,highscoresResponse:s,source:"bookmarklet",timestamp:Date.now()},c=JSON.stringify(a,null,2);if(await async function(e){try{return await navigator.clipboard.writeText(e),!0}catch(e){return console.error("Failed to copy to clipboard:",e),!1}}(c)){e(\`Challenge "\${i.name||"challenge"}" data copied to clipboard!\`,"success")}else e("Failed to copy to clipboard.","error")}catch(t){console.error("Bookmarklet error:",t),e(\`Error: \${t.message}\`,"error")}}()}();`;
